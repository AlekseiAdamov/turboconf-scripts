//@script_name ExtractVariable
//@script_display_name Извлечь переменную
//@script_description Извлекает выделенный код в новую переменную.
//@script_author Aleksei Adamov
//@script_developer_url https://github.com/AlekseiAdamov
//@script_url https://github.com/AlekseiAdamov/turboconf-scripts/ExtractVariable.os
//@script_section Рефакторинг
//@script_hotkey Control+Alt+V
//@retain_clipboard 1
//@enterprise_mode 1
//@hide_actions 1
//@script_version 1
//@turbomenu 1
//@turbobutton 1

// Переменная для хранения имени переменной,
// которой нужно присвоить выделенный код.
Перем ИмяПеременной;

// Объект вызывающего приложения.
Перем ТурбоКонф;

Процедура ОбработчикВводаЗначения(Знач Значение, Отказ) Экспорт

	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	ИмяПеременной = Значение;

	Если ПустаяСтрока(ИмяПеременной) Тогда

		ТурбоКонф.ПоказатьПодсказку("Имя переменной не может быть пустым!");
		Возврат;

	КонецЕсли;

	КодПеременной = "";
	Позиция       = 0;
	НомерКолонки  = 1;
	НомерСтроки   = 1;
	ТурбоКонф.ПолучитьТекстСПозицией(КодПеременной, Позиция, НомерКолонки, НомерСтроки);

	// При получении текста добавляются вторые кавычки, очищаем.
	КодПеременной = СтрЗаменить(КодПеременной, """""", """");
	ТекстПеременной = СтрШаблон("%1 = %2;", ИмяПеременной, КодПеременной);
	ТурбоКонф.Ждать(100);

	// Добавляем новую строку перед исходной и переходим на нее.
	ТурбоКонф.Клавиша(Клавиши.Home);
	ТурбоКонф.Клавиша(Клавиши.Enter);
	ТурбоКонф.Клавиша(Клавиши.Up);
	ТурбоКонф.Клавиша(Клавиши.End);
	ТурбоКонф.Ждать(100);

	ТурбоКонф.ВставитьТекст(ТекстПеременной);

	НомерИсходнойСтроки = НомерСтроки + 1;
	ЗаменитьКодПеременнойНаЕеИмя(НомерИсходнойСтроки, КодПеременной, ИмяПеременной);

КонецПроцедуры

Процедура ЗаменитьКодПеременнойНаЕеИмя(Знач НомерИсходнойСтроки, Знач КодПеременной, Знач ИмяПеременной)

	// Переходим на исходную строку и выделяем ее.
	ТурбоКонф.ПерейтиВПозицию(1, НомерИсходнойСтроки);
	ТурбоКонф.ШифтКлавиша(Клавиши.End);

	ТекстСтроки = "";
	Позиция     = 0;
	ТурбоКонф.ПолучитьТекстМодуля(ТекстСтроки, Позиция);

	// Заменяет только в исходной строке.
	// Для замены всех вхождений в многострочном выражении нужно дорабатывать.
	ТекстСтроки = СтрЗаменить(ТекстСтроки, КодПеременной, ИмяПеременной);

	ТурбоКонф.ВставитьТекст(ТекстСтроки);

КонецПроцедуры

ТурбоКонф = Новый ТурбоКонф;

Форма = Новый ФормаВводаЗначения();
Форма.УстановитьДействие(ЭтотОбъект, "ОбработчикВводаЗначения");
Форма.Значение  = "Переменная";
Форма.Заголовок = "Имя переменной";
Форма.Текст     = "Введите имя переменной:";
Форма.Показать();
